(window.webpackJsonp=window.webpackJsonp||[]).push([[677],{1112:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"testmongoosecontext"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#testmongoosecontext"}},[s._v("#")]),s._v(" TestMongooseContext "),n("Badge",{attrs:{text:"Class",type:"class"}})],1),s._v(" "),n("section",{staticClass:"symbol-info"},[n("table",{staticClass:"is-full-width"},[n("tbody",[n("tr",[n("th",[s._v("Module")]),n("td",[n("div",{staticClass:"lang-typescript"},[n("span",{staticClass:"token keyword"},[s._v("import")]),s._v(" { TestMongooseContext } "),n("span",{staticClass:"token keyword"},[s._v("from")]),s._v(" "),n("span",{staticClass:"token string"},[s._v('"@tsed/testing-mongoose"')])])])]),n("tr",[n("th",[s._v("Source")]),n("td",[n("a",{attrs:{href:"https://github.com/TypedProject/tsed/blob/v6.1.4/packages/testing-mongoose/src/TestMongooseContext.ts#L0-L0"}},[s._v("/packages/testing-mongoose/src/TestMongooseContext.ts")])])])])])]),s._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[s._v("#")]),s._v(" Overview")]),s._v(" "),n("div",{staticClass:"language-typescript"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",{pre:!0,attrs:{class:"typescript-lang "}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" TestMongooseContext "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("a",{pre:!0,attrs:{href:"/api/common/platform-test/components/PlatformTest.html"}},[n("span",{pre:!0,attrs:{class:"token"}},[s._v("PlatformTest")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("div",{pre:!0,attrs:{class:"language- extra-class"}},[n("pre",[n("code",[s._v('<span class="token keyword">static</span> <span class="token function">install</span><span class="token punctuation">(</span>options?<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Promise&lt;<span class="token punctuation">{</span>\n    url<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n    connectionOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        useUnifiedTopology<span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n        useNewUrlParser<span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>&gt;<span class="token punctuation">;</span>\n/**\n * Connect to the in-memory database.\n */\n<span class="token keyword">static</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span>mod<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">,</span> options?<span class="token punctuation">:</span> Partial&lt;TsED.<a href="/api/di/decorators/Configuration.html"><span class="token">Configuration</span></a>&gt;<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> =&gt; Promise&lt;<span class="token keyword">void</span>&gt;<span class="token punctuation">;</span>\n<span class="token keyword">static</span> <span class="token function">create</span><span class="token punctuation">(</span>options?<span class="token punctuation">:</span> Partial&lt;TsED.<a href="/api/di/decorators/Configuration.html"><span class="token">Configuration</span></a>&gt;<span class="token punctuation">)</span><span class="token punctuation">:</span> Promise&lt;<span class="token keyword">void</span>&gt;<span class="token punctuation">;</span>\n/**\n * Resets the test injector of the test context<span class="token punctuation">,</span> so it won\'t pollute your next test. Call this in your `tearDown` logic.\n */\n<span class="token keyword">static</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Promise&lt;<span class="token keyword">void</span>&gt;<span class="token punctuation">;</span>\n/**\n *\n */\n<span class="token keyword">static</span> <span class="token function">clearDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Promise&lt;<span class="token keyword">void</span>&gt;<span class="token punctuation">;</span>\n<span class="token keyword">static</span> <span class="token function">getMongooseOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Promise&lt;<span class="token punctuation">{</span>\n    url<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n    connectionOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        useUnifiedTopology<span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n        useNewUrlParser<span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>&gt;<span class="token punctuation">;</span>\n')])])]),n("p",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])])])])]),n("p"),s._v(" "),n("h2",{attrs:{id:"members"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#members"}},[s._v("#")]),s._v(" Members")]),s._v(" "),n("div",{pre:!0},[n("div",{pre:!0,attrs:{class:"method-overview"}},[n("div",{pre:!0,attrs:{class:"language-typescript"}},[n("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[n("code",{pre:!0,attrs:{class:"typescript-lang "}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("options?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Promise<"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     connectionOptions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         useUnifiedTopology"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         useNewUrlParser"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(">"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),n("hr"),s._v(" "),n("div",{pre:!0},[n("div",{pre:!0,attrs:{class:"method-overview"}},[n("div",{pre:!0,attrs:{class:"language-typescript"}},[n("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[n("code",{pre:!0,attrs:{class:"typescript-lang "}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bootstrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" options?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Partial<TsED."),n("a",{pre:!0,attrs:{href:"/api/di/decorators/Configuration.html"}},[n("span",{pre:!0,attrs:{class:"token"}},[s._v("Configuration")])]),s._v(">"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" => Promise<"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(">"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),n("p",[s._v("Connect to the in-memory database.")])]),n("hr"),s._v(" "),n("div",{pre:!0},[n("div",{pre:!0,attrs:{class:"method-overview"}},[n("div",{pre:!0,attrs:{class:"language-typescript"}},[n("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[n("code",{pre:!0,attrs:{class:"typescript-lang "}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("options?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Partial<TsED."),n("a",{pre:!0,attrs:{href:"/api/di/decorators/Configuration.html"}},[n("span",{pre:!0,attrs:{class:"token"}},[s._v("Configuration")])]),s._v(">"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Promise<"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(">"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),n("hr"),s._v(" "),n("div",{pre:!0},[n("div",{pre:!0,attrs:{class:"method-overview"}},[n("div",{pre:!0,attrs:{class:"language-typescript"}},[n("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[n("code",{pre:!0,attrs:{class:"typescript-lang "}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reset")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Promise<"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(">"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),n("p",[s._v("Resets the test injector of the test context, so it won't pollute your next test. Call this in your "),n("code",[s._v("tearDown")]),s._v(" logic.")])]),n("hr"),s._v(" "),n("div",{pre:!0},[n("div",{pre:!0,attrs:{class:"method-overview"}},[n("div",{pre:!0,attrs:{class:"language-typescript"}},[n("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[n("code",{pre:!0,attrs:{class:"typescript-lang "}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("clearDatabase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Promise<"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(">"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),n("hr"),s._v(" "),n("div",{pre:!0},[n("div",{pre:!0,attrs:{class:"method-overview"}},[n("div",{pre:!0,attrs:{class:"language-typescript"}},[n("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[n("code",{pre:!0,attrs:{class:"typescript-lang "}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMongooseOptions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Promise<"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     connectionOptions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         useUnifiedTopology"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         useNewUrlParser"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(">"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);